<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <log4net>
    <logger name="StudyLog4net">
      <!--指定Log4.net第三个参数为StudyLog4net的则会执行StudyLog4netAppen下的配置-->
      <appender-ref ref="StudyLog4net_File" />
    </logger>
    
    <logger name="">
      <!--指定Log4.net第三个参数为""的则会执行Error下的配置-->
      <appender-ref ref="Error" />
    </logger>
    
    <!--按日期分割日志文件 一天一个-->
    <appender name="Error" type="log4net.Appender.RollingFileAppender,log4net">
      <!--文件存放路径-->
      <param name="File" value="log\Error\Error.log"/>
      <!--是否打开续写-->
      <param name="AppendToFile" value="true"/>
      <!--文件创建的方式-->
      <param name="RollingStyle" value="Date"/>
      <!--日期格式，当我们设置了RollingStyle 为Date方式后，Log4Net会自动使用DatePattern 中的日期格式来创建新的日志文件-->
      <param name="DatePattern" value="yyyy.MM.dd"/>
      <!--是否使用静态文件名-->
      <param name="StaticLogFileName" value="true"/>
      <!--信息书写的布局样式设置-->
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p - %m%n"/>
      </layout>
    </appender>
    
    <appender name="StudyLog4net_File" type="log4net.Appender.RollingFileAppender,log4net">
      <param name="File" value="log\StudyLog4net_File\StudyLog4net_File.log"/>
      <param name="AppendToFile" value="true"/>
      <param name="RollingStyle" value="Date"/>
      <param name="DatePattern" value="yyyy.MM.dd"/>
      <param name="StaticLogFileName" value="true"/>
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p - %m%n"/>
      </layout>
    </appender>
    <root>
      <!--日志记录的类型-->
      <level value="All" />
      <!--启用文件存储-->
      <appender-ref ref="rollingFile"/>
    </root>
  </log4net>
  
  
  
  
</configuration>
<!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
%n(new line):换行
%d(datetime):输出当前语句运行的时刻
%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
%t(thread id):当前语句所在的线程ID
%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
%c(class):当前日志对象的名称
%L：输出语句所在的行号
%F：输出语句所在的文件名
%-数字：表示该项的最小长度，如果不够，则用空格填充-->



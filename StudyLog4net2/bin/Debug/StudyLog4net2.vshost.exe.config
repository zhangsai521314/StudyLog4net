<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <log4net>
    <logger name="">
      <!--指定Log4.net第三个参数为StudyLog4net的则会执行Error下的配置-->
      <appender-ref ref="Error" />
    </logger>

    <logger name="StudyLog4net2">
      <!--指定Log4.net第三个参数为StudyLog4net的则会执行StudyLog4net2下的配置-->
      <appender-ref ref="StudyLog4net_Size" />
    </logger>


    <!--按日志容量分割日志文件-->
    <appender name="Error" type="log4net.Appender.RollingFileAppender" >
      <param name="File" value="Log\Error\Error.log" />
      <!--是否续写-->
      <param name="AppendToFile" value="true" />
      <!--是否使用静态文件名-->
      <param name="StaticLogFileName" value="false" />
      <!--按照文件的大小进行变换日志文件,如果RollingStyle的value是Date则MaximumFileSize和MaxSizeRollBackups的设置毫无意义-->
      <param name="RollingStyle" value="Size" />
      <!--单个文件最大数量 只有在 按Size分割时有效.不要使用小数,否则会一直写入当前日志-->
      <param name="MaximumFileSize" value="10KB"/>
      <!--保留的log文件数量 超过此数量后 自动删除之前的   只有在 按Size分割时有效-->
      <param name="MaxSizeRollBackups" value="2" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="发生时间:%d %n事件级别:%level %n相关类名:%c%n程序文件:%F 第%L行%n日志内容:%m" />
      </layout>
    </appender>

    <!--按日志容量分割日志文件-->
    <appender name="StudyLog4net_Size" type="log4net.Appender.RollingFileAppender" >
      <param name="File" value="Log\StudyLog4net_Size\StudyLog4net_Size.log" />
      <!--是否续写-->
      <param name="AppendToFile" value="true" />
      <!--是否使用静态文件名-->
      <param name="StaticLogFileName" value="false" />
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <!--<param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />-->
      <!--按照文件的大小进行变换日志文件-->
      <param name="RollingStyle" value="Size" />
      <!--单个文件最大数量 只有在 按Size分割时有效-->
      <param name="MaximumFileSize" value="10KB"/>
      <!--保留的log文件数量，超过此数量后，自动从最后的删除，按Size分割时有效-->
      <param name="MaxSizeRollBackups" value="2" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="发生时间:%d %n事件级别:%level %n相关类名:%c%n程序文件:%F 第%L行%n日志内容:%m%n-----------------------------------------%n" />
      </layout>
    </appender>
    <root>
      <!--日志记录的类型-->
      <level value="All" />
      <!--启用按容量分割-->
      <appender-ref ref="LogFileAppenderBySize" />
    </root>
  </log4net>
</configuration>
<!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
%n(new line):换行
%d(datetime):输出当前语句运行的时刻
%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
%t(thread id):当前语句所在的线程ID
%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
%c(class):当前日志对象的名称
%L：输出语句所在的行号
%F：输出语句所在的文件名
%-数字：表示该项的最小长度，如果不够，则用空格填充-->

